"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[9436],{1772:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>c,contentTitle:()=>t,default:()=>u,frontMatter:()=>i,metadata:()=>r,toc:()=>l});const r=JSON.parse('{"id":"Observer/Observer-Caracteristicas","title":"Caracter\xedsticas del Patr\xf3n Observer","description":"---","source":"@site/docs/01-Observer/02-Observer-Caracteristicas.md","sourceDirName":"01-Observer","slug":"/Observer/Observer-Caracteristicas","permalink":"/docosaurus-arq/docs/Observer/Observer-Caracteristicas","draft":false,"unlisted":false,"editUrl":"https://github.com/dazer-m-l/docosaurus-arq/tree/main/docs/docs/01-Observer/02-Observer-Caracteristicas.md","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Patr\xf3n Observer","permalink":"/docosaurus-arq/docs/Observer/Observer-intro"},"next":{"title":"Ventajas y Desventajas del Patr\xf3n Observer","permalink":"/docosaurus-arq/docs/Observer/Observer-Ventajas-y-Desventajas"}}');var a=n(4848),o=n(8453);const i={},t="Caracter\xedsticas del Patr\xf3n Observer",c={},l=[{value:"\xbfCu\xe1ndo usarlo?",id:"cu\xe1ndo-usarlo",level:2}];function d(e){const s={h1:"h1",h2:"h2",header:"header",hr:"hr",li:"li",ol:"ol",p:"p",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(s.header,{children:(0,a.jsx)(s.h1,{id:"caracter\xedsticas-del-patr\xf3n-observer",children:"Caracter\xedsticas del Patr\xf3n Observer"})}),"\n",(0,a.jsx)(s.hr,{}),"\n",(0,a.jsxs)(s.p,{children:["El ",(0,a.jsx)(s.strong,{children:"Patr\xf3n Observer"})," tiene varias caracter\xedsticas clave que lo hacen adecuado para una variedad de escenarios de dise\xf1o. A continuaci\xf3n se detallan sus principales caracter\xedsticas:"]}),"\n",(0,a.jsxs)(s.ol,{children:["\n",(0,a.jsxs)(s.li,{children:["\n",(0,a.jsxs)(s.p,{children:[(0,a.jsx)(s.strong,{children:"Desacoplamiento entre el sujeto y los observadores"}),":"]}),"\n",(0,a.jsxs)(s.ul,{children:["\n",(0,a.jsx)(s.li,{children:"Uno de los puntos m\xe1s importantes del patr\xf3n es que el sujeto no necesita saber nada sobre las clases observadoras ni c\xf3mo reaccionar\xe1n ante los cambios. El sujeto solo notifica a los observadores registrados, y los observadores se encargan de reaccionar al cambio. Este desacoplamiento hace que el sistema sea m\xe1s flexible y f\xe1cil de mantener."}),"\n"]}),"\n"]}),"\n",(0,a.jsxs)(s.li,{children:["\n",(0,a.jsxs)(s.p,{children:[(0,a.jsx)(s.strong,{children:"Relaci\xf3n uno a muchos"}),":"]}),"\n",(0,a.jsxs)(s.ul,{children:["\n",(0,a.jsx)(s.li,{children:'Este patr\xf3n establece una relaci\xf3n "uno a muchos" entre el sujeto y los observadores. Un solo sujeto puede ser observado por m\xfaltiples observadores. Cuando el estado del sujeto cambia, todos los observadores son notificados simult\xe1neamente.'}),"\n"]}),"\n"]}),"\n",(0,a.jsxs)(s.li,{children:["\n",(0,a.jsxs)(s.p,{children:[(0,a.jsx)(s.strong,{children:"Notificaci\xf3n autom\xe1tica"}),":"]}),"\n",(0,a.jsxs)(s.ul,{children:["\n",(0,a.jsx)(s.li,{children:"Los observadores se mantienen informados de los cambios sin necesidad de que ellos mismos soliciten actualizaciones. Esto permite que el sistema sea reactivo y eficiente, ya que los objetos solo se actualizan cuando es necesario."}),"\n"]}),"\n"]}),"\n",(0,a.jsxs)(s.li,{children:["\n",(0,a.jsxs)(s.p,{children:[(0,a.jsx)(s.strong,{children:"Flexibilidad en la adici\xf3n y eliminaci\xf3n de observadores"}),":"]}),"\n",(0,a.jsxs)(s.ul,{children:["\n",(0,a.jsx)(s.li,{children:"Un aspecto valioso del patr\xf3n es que permite agregar o quitar observadores de manera din\xe1mica sin afectar la funcionalidad del sujeto. Esto es \xfatil en sistemas en los que los observadores pueden cambiar en funci\xf3n de las necesidades del momento."}),"\n"]}),"\n"]}),"\n",(0,a.jsxs)(s.li,{children:["\n",(0,a.jsxs)(s.p,{children:[(0,a.jsx)(s.strong,{children:"Facilidad de extensi\xf3n"}),":"]}),"\n",(0,a.jsxs)(s.ul,{children:["\n",(0,a.jsxs)(s.li,{children:["El patr\xf3n facilita la extensi\xf3n de un sistema sin alterar el c\xf3digo existente. Al agregar nuevos observadores o modificar su comportamiento, se puede hacer sin modificar el sujeto ni otros observadores. Esto favorece el principio de ",(0,a.jsx)(s.strong,{children:"abierto/cerrado"})," (abierto para extensi\xf3n, cerrado para modificaci\xf3n)."]}),"\n"]}),"\n"]}),"\n",(0,a.jsxs)(s.li,{children:["\n",(0,a.jsxs)(s.p,{children:[(0,a.jsx)(s.strong,{children:"Desempe\xf1o controlado"}),":"]}),"\n",(0,a.jsxs)(s.ul,{children:["\n",(0,a.jsx)(s.li,{children:"Aunque puede ser costoso notificar a un gran n\xfamero de observadores, el patr\xf3n puede ser optimizado seg\xfan las necesidades del sistema, garantizando que el n\xfamero de notificaciones no degrade el desempe\xf1o de la aplicaci\xf3n."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(s.hr,{}),"\n",(0,a.jsx)(s.h2,{id:"cu\xe1ndo-usarlo",children:"\xbfCu\xe1ndo usarlo?"}),"\n",(0,a.jsxs)(s.ul,{children:["\n",(0,a.jsx)(s.li,{children:"Cuando varios objetos necesitan ser informados de un cambio en el estado de otro objeto."}),"\n",(0,a.jsxs)(s.li,{children:["Para implementar sistemas ",(0,a.jsx)(s.strong,{children:"reactivos"}),", donde el cambio en un objeto desencadena actualizaciones autom\xe1ticas."]}),"\n"]}),"\n",(0,a.jsx)(s.hr,{})]})}function u(e={}){const{wrapper:s}={...(0,o.R)(),...e.components};return s?(0,a.jsx)(s,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},8453:(e,s,n)=>{n.d(s,{R:()=>i,x:()=>t});var r=n(6540);const a={},o=r.createContext(a);function i(e){const s=r.useContext(o);return r.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function t(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:i(e.components),r.createElement(o.Provider,{value:s},e.children)}}}]);