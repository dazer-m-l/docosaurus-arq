"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[6627],{4082:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>i,contentTitle:()=>o,default:()=>p,frontMatter:()=>s,metadata:()=>t,toc:()=>l});const t=JSON.parse('{"id":"State/State-Ejemplo","title":"Ejemplo del Patr\xf3n State","description":"El patr\xf3n State es \xfatil cuando el comportamiento de un objeto cambia en funci\xf3n de su estado interno. A continuaci\xf3n, se presenta un ejemplo para comprender mejor c\xf3mo funciona este patr\xf3n.","source":"@site/docs/04-State/04-State-Ejemplo.md","sourceDirName":"04-State","slug":"/State/State-Ejemplo","permalink":"/docosaurus-arq/docs/State/State-Ejemplo","draft":false,"unlisted":false,"editUrl":"https://github.com/dazer-m-l/docosaurus-arq/tree/main/docs/docs/04-State/04-State-Ejemplo.md","tags":[],"version":"current","sidebarPosition":4,"frontMatter":{"sidebar_position":4},"sidebar":"tutorialSidebar","previous":{"title":"Ventajas y Desventajas del Patr\xf3n State","permalink":"/docosaurus-arq/docs/State/State-Ventaja-Desventaja"},"next":{"title":"Patron Template Method","permalink":"/docosaurus-arq/docs/category/patron-template-method"}}');var r=n(4848),d=n(8453);const s={sidebar_position:4},o="Ejemplo del Patr\xf3n State",i={},l=[{value:"Escenario",id:"escenario",level:2},{value:"Implementaci\xf3n",id:"implementaci\xf3n",level:2},{value:"Clase Principal: <code>Order</code>",id:"clase-principal-order",level:3},{value:"Estados",id:"estados",level:2},{value:"Estado Pendiente",id:"estado-pendiente",level:4},{value:"Estado Enviado",id:"estado-enviado",level:4},{value:"Estado Entregado",id:"estado-entregado",level:4},{value:"Estado Cancelado",id:"estado-cancelado",level:4},{value:"Uso",id:"uso",level:2},{value:"Explicaci\xf3n",id:"explicaci\xf3n",level:2}];function c(e){const a={code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",hr:"hr",p:"p",pre:"pre",strong:"strong",...(0,d.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(a.header,{children:(0,r.jsx)(a.h1,{id:"ejemplo-del-patr\xf3n-state",children:"Ejemplo del Patr\xf3n State"})}),"\n",(0,r.jsxs)(a.p,{children:["El patr\xf3n ",(0,r.jsx)(a.strong,{children:"State"})," es \xfatil cuando el comportamiento de un objeto cambia en funci\xf3n de su estado interno. A continuaci\xf3n, se presenta un ejemplo para comprender mejor c\xf3mo funciona este patr\xf3n."]}),"\n",(0,r.jsx)(a.hr,{}),"\n",(0,r.jsx)(a.h2,{id:"escenario",children:"Escenario"}),"\n",(0,r.jsxs)(a.p,{children:["Imagina un sistema de gesti\xf3n de pedidos en una tienda en l\xednea. Cada pedido puede estar en diferentes estados: ",(0,r.jsx)(a.strong,{children:"Pendiente"}),", ",(0,r.jsx)(a.strong,{children:"Enviado"}),", ",(0,r.jsx)(a.strong,{children:"Entregado"})," o ",(0,r.jsx)(a.strong,{children:"Cancelado"}),". Cada estado tiene un comportamiento diferente al procesar el pedido."]}),"\n",(0,r.jsx)(a.hr,{}),"\n",(0,r.jsx)(a.h2,{id:"implementaci\xf3n",children:"Implementaci\xf3n"}),"\n",(0,r.jsxs)(a.h3,{id:"clase-principal-order",children:["Clase Principal: ",(0,r.jsx)(a.code,{children:"Order"})]}),"\n",(0,r.jsxs)(a.p,{children:["La clase ",(0,r.jsx)(a.code,{children:"Order"})," representa un pedido. No contiene l\xf3gica espec\xedfica para cada estado, sino que delega el comportamiento a los objetos de estado."]}),"\n",(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{className:"language-javascript",children:"class Order {\r\n  constructor() {\r\n    this.state = new PendingState(); // Estado inicial\r\n  }\r\n\r\n  setState(state) {\r\n    this.state = state; // Cambiar el estado\r\n  }\r\n\r\n  processOrder() {\r\n    this.state.handleRequest(); // Delegar al estado actual\r\n  }\r\n}\n"})}),"\n",(0,r.jsx)(a.h2,{id:"estados",children:"Estados"}),"\n",(0,r.jsx)(a.p,{children:"Cada estado es una clase separada que implementa el m\xe9todo handleRequest para definir su comportamiento."}),"\n",(0,r.jsx)(a.h4,{id:"estado-pendiente",children:"Estado Pendiente"}),"\n",(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{className:"language-javascript",children:'Copiar c\xf3digo\r\nclass PendingState {\r\n  handleRequest() {\r\n    console.log("La orden est\xe1 pendiente.");\r\n  }\r\n}\n'})}),"\n",(0,r.jsx)(a.h4,{id:"estado-enviado",children:"Estado Enviado"}),"\n",(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{className:"language-javascript",children:'Copiar c\xf3digo\r\nclass ShippedState {\r\n  handleRequest() {\r\n    console.log("La orden ha sido enviada.");\r\n  }\r\n}\n'})}),"\n",(0,r.jsx)(a.h4,{id:"estado-entregado",children:"Estado Entregado"}),"\n",(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{className:"language-javascript",children:'Copiar c\xf3digo\r\nclass DeliveredState {\r\n  handleRequest() {\r\n    console.log("La orden ha sido entregada.");\r\n  }\r\n}\n'})}),"\n",(0,r.jsx)(a.h4,{id:"estado-cancelado",children:"Estado Cancelado"}),"\n",(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{className:"language-javascript",children:'Copiar c\xf3digo\r\nclass CanceledState {\r\n  handleRequest() {\r\n    console.log("La orden ha sido cancelada.");\r\n  }\r\n}\n'})}),"\n",(0,r.jsx)(a.h2,{id:"uso",children:"Uso"}),"\n",(0,r.jsx)(a.p,{children:"El siguiente c\xf3digo muestra c\xf3mo interactuar con el sistema de pedidos utilizando el patr\xf3n State:"}),"\n",(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{className:"language-javascript",children:"Copiar c\xf3digo\r\nconst order = new Order(); // Estado inicial: Pendiente\r\norder.processOrder(); // Salida: La orden est\xe1 pendiente.\r\n\r\norder.setState(new ShippedState()); // Cambiar a estado Enviado\r\norder.processOrder(); // Salida: La orden ha sido enviada.\r\n\r\norder.setState(new DeliveredState()); // Cambiar a estado Entregado\r\norder.processOrder(); // Salida: La orden ha sido entregada.\r\n\r\norder.setState(new CanceledState()); // Cambiar a estado Cancelado\r\norder.processOrder(); // Salida: La orden ha sido cancelada.\n"})}),"\n",(0,r.jsx)(a.h2,{id:"explicaci\xf3n",children:"Explicaci\xf3n"}),"\n",(0,r.jsx)(a.p,{children:"Cambio Din\xe1mico de Comportamiento:"}),"\n",(0,r.jsx)(a.p,{children:"La clase Order cambia din\xe1micamente su comportamiento al delegar las responsabilidades a las clases de estado.\r\nModularidad:"}),"\n",(0,r.jsx)(a.p,{children:"Cada estado es una clase separada, lo que facilita la adici\xf3n de nuevos estados o la modificaci\xf3n de los existentes sin alterar el c\xf3digo de la clase principal.\r\nReducci\xf3n de Complejidad:"}),"\n",(0,r.jsx)(a.p,{children:"Al evitar estructuras condicionales complejas, el c\xf3digo es m\xe1s f\xe1cil de entender y mantener."})]})}function p(e={}){const{wrapper:a}={...(0,d.R)(),...e.components};return a?(0,r.jsx)(a,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},8453:(e,a,n)=>{n.d(a,{R:()=>s,x:()=>o});var t=n(6540);const r={},d=t.createContext(r);function s(e){const a=t.useContext(d);return t.useMemo((function(){return"function"==typeof e?e(a):{...a,...e}}),[a,e])}function o(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),t.createElement(d.Provider,{value:a},e.children)}}}]);