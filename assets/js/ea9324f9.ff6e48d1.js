"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[2220],{212:(e,a,s)=>{s.r(a),s.d(a,{assets:()=>d,contentTitle:()=>t,default:()=>p,frontMatter:()=>r,metadata:()=>i,toc:()=>l});const i=JSON.parse('{"id":"Visitor/Visitor-Ventaja-Desventaja","title":"Ventajas y Desventajas del Patr\xf3n Visitor","description":"El patr\xf3n Visitor tiene muchas ventajas relacionadas con la extensibilidad y modularidad, pero tambi\xe9n presenta algunas limitaciones dependiendo del contexto. A continuaci\xf3n, se presentan sus principales pros y contras:","source":"@site/docs/06-Visitor/03-Visitor-Ventaja-Desventaja.md","sourceDirName":"06-Visitor","slug":"/Visitor/Visitor-Ventaja-Desventaja","permalink":"/docosaurus-arq/docs/Visitor/Visitor-Ventaja-Desventaja","draft":false,"unlisted":false,"editUrl":"https://github.com/dazer-m-l/docosaurus-arq/tree/main/docs/docs/06-Visitor/03-Visitor-Ventaja-Desventaja.md","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"sidebar_position":3},"sidebar":"tutorialSidebar","previous":{"title":"Caracter\xedsticas del Patr\xf3n Visitor","permalink":"/docosaurus-arq/docs/Visitor/Visitor-Caracteristicas"},"next":{"title":"Ejemplo del Patr\xf3n Visitor","permalink":"/docosaurus-arq/docs/Visitor/Visitor-Ejemplo"}}');var n=s(4848),o=s(8453);const r={sidebar_position:3},t="Ventajas y Desventajas del Patr\xf3n Visitor",d={},l=[{value:"<strong>Ventajas</strong>",id:"ventajas",level:2},{value:"1. <strong>Extensibilidad de Algoritmos</strong>",id:"1-extensibilidad-de-algoritmos",level:3},{value:"2. <strong>Organizaci\xf3n de Operaciones</strong>",id:"2-organizaci\xf3n-de-operaciones",level:3},{value:"Ejemplo:",id:"ejemplo",level:4},{value:"3. Doble Despacho",id:"3-doble-despacho",level:3},{value:"4. Separaci\xf3n de Responsabilidades",id:"4-separaci\xf3n-de-responsabilidades",level:3},{value:"5. Reutilizaci\xf3n de Visitantes",id:"5-reutilizaci\xf3n-de-visitantes",level:3},{value:"6. Adecuado para Jerarqu\xedas Complejas",id:"6-adecuado-para-jerarqu\xedas-complejas",level:3},{value:"<strong>Desventajas</strong>",id:"desventajas",level:2},{value:"1. Dif\xedcil de Usar con Estructuras Cambiantes",id:"1-dif\xedcil-de-usar-con-estructuras-cambiantes",level:3},{value:"2. Acoplamiento Adicional",id:"2-acoplamiento-adicional",level:3},{value:"3. Complejidad Inicial",id:"3-complejidad-inicial",level:3},{value:"4. Falta de Escalabilidad para Nuevos Tipos de Datos",id:"4-falta-de-escalabilidad-para-nuevos-tipos-de-datos",level:3},{value:"5. Menor Flexibilidad en Lenguajes Din\xe1micos",id:"5-menor-flexibilidad-en-lenguajes-din\xe1micos",level:3}];function c(e){const a={code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",hr:"hr",p:"p",pre:"pre",strong:"strong",...(0,o.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(a.header,{children:(0,n.jsx)(a.h1,{id:"ventajas-y-desventajas-del-patr\xf3n-visitor",children:"Ventajas y Desventajas del Patr\xf3n Visitor"})}),"\n",(0,n.jsxs)(a.p,{children:["El patr\xf3n ",(0,n.jsx)(a.strong,{children:"Visitor"})," tiene muchas ventajas relacionadas con la extensibilidad y modularidad, pero tambi\xe9n presenta algunas limitaciones dependiendo del contexto. A continuaci\xf3n, se presentan sus principales pros y contras:"]}),"\n",(0,n.jsx)(a.hr,{}),"\n",(0,n.jsx)(a.h2,{id:"ventajas",children:(0,n.jsx)(a.strong,{children:"Ventajas"})}),"\n",(0,n.jsxs)(a.h3,{id:"1-extensibilidad-de-algoritmos",children:["1. ",(0,n.jsx)(a.strong,{children:"Extensibilidad de Algoritmos"})]}),"\n",(0,n.jsxs)(a.p,{children:["El patr\xf3n permite agregar nuevos comportamientos a la estructura de datos sin modificar las clases existentes. Esto sigue el principio ",(0,n.jsx)(a.strong,{children:"Open/Closed"}),"."]}),"\n",(0,n.jsxs)(a.p,{children:["Ejemplo:\r\nAl agregar un nuevo visitante, como ",(0,n.jsx)(a.code,{children:"ExportVisitor"}),", no es necesario cambiar las clases ",(0,n.jsx)(a.code,{children:"PDFDocument"})," ni ",(0,n.jsx)(a.code,{children:"WordDocument"}),"."]}),"\n",(0,n.jsx)(a.hr,{}),"\n",(0,n.jsxs)(a.h3,{id:"2-organizaci\xf3n-de-operaciones",children:["2. ",(0,n.jsx)(a.strong,{children:"Organizaci\xf3n de Operaciones"})]}),"\n",(0,n.jsx)(a.p,{children:"Centraliza la l\xf3gica de operaciones en una clase visitante en lugar de distribuirla por toda la estructura de datos. Esto hace que el c\xf3digo sea m\xe1s f\xe1cil de entender y mantener."}),"\n",(0,n.jsx)(a.h4,{id:"ejemplo",children:"Ejemplo:"}),"\n",(0,n.jsx)(a.pre,{children:(0,n.jsx)(a.code,{className:"language-javascript",children:'class PrintVisitor {\r\n  visitPDFDocument(doc) {\r\n    console.log("Imprimiendo PDF.");\r\n  }\r\n\r\n  visitWordDocument(doc) {\r\n    console.log("Imprimiendo Word.");\r\n  }\r\n}\n'})}),"\n",(0,n.jsxs)(a.p,{children:["Todas las operaciones de impresi\xf3n est\xe1n en ",(0,n.jsx)(a.code,{children:"PrintVisitor"}),"."]}),"\n",(0,n.jsx)(a.h3,{id:"3-doble-despacho",children:"3. Doble Despacho"}),"\n",(0,n.jsx)(a.p,{children:"El patr\xf3n permite que las operaciones sean espec\xedficas tanto para el tipo de visitante como para el tipo del objeto visitado. Esto resulta en un comportamiento altamente especializado."}),"\n",(0,n.jsx)(a.h3,{id:"4-separaci\xf3n-de-responsabilidades",children:"4. Separaci\xf3n de Responsabilidades"}),"\n",(0,n.jsx)(a.p,{children:"La l\xf3gica de las operaciones no est\xe1 incrustada en las clases de datos. Esto asegura que las clases de datos solo se ocupen de gestionar la informaci\xf3n y no de c\xf3mo procesarla."}),"\n",(0,n.jsx)(a.h3,{id:"5-reutilizaci\xf3n-de-visitantes",children:"5. Reutilizaci\xf3n de Visitantes"}),"\n",(0,n.jsx)(a.p,{children:"Un visitante puede ser reutilizado para varias estructuras de objetos que compartan una interfaz com\xfan, promoviendo la consistencia y evitando duplicaci\xf3n de c\xf3digo."}),"\n",(0,n.jsx)(a.h3,{id:"6-adecuado-para-jerarqu\xedas-complejas",children:"6. Adecuado para Jerarqu\xedas Complejas"}),"\n",(0,n.jsx)(a.p,{children:"Funciona bien en sistemas donde las clases tienen una jerarqu\xeda compleja, permitiendo realizar operaciones espec\xedficas para cada clase sin llenar el c\xf3digo de condicionales."}),"\n",(0,n.jsx)(a.h2,{id:"desventajas",children:(0,n.jsx)(a.strong,{children:"Desventajas"})}),"\n",(0,n.jsx)(a.h3,{id:"1-dif\xedcil-de-usar-con-estructuras-cambiantes",children:"1. Dif\xedcil de Usar con Estructuras Cambiantes"}),"\n",(0,n.jsx)(a.p,{children:"Si las clases en la estructura de datos cambian frecuentemente (se agregan o eliminan tipos), el patr\xf3n Visitor puede volverse engorroso, ya que cada visitante debe actualizarse para manejar los nuevos tipos."}),"\n",(0,n.jsx)(a.h3,{id:"2-acoplamiento-adicional",children:"2. Acoplamiento Adicional"}),"\n",(0,n.jsx)(a.p,{children:"Introduce un acoplamiento entre las clases de datos y las clases visitantes, ya que las clases de datos necesitan conocer y aceptar visitantes."}),"\n",(0,n.jsxs)(a.p,{children:["Ejemplo:\r\nCada clase en la estructura debe implementar un m\xe9todo ",(0,n.jsx)(a.code,{children:"accept(visitor)"}),"."]}),"\n",(0,n.jsx)(a.h3,{id:"3-complejidad-inicial",children:"3. Complejidad Inicial"}),"\n",(0,n.jsx)(a.p,{children:"La implementaci\xf3n del patr\xf3n puede ser m\xe1s compleja en comparaci\xf3n con soluciones m\xe1s simples, especialmente si se utiliza para sistemas peque\xf1os donde no se justifica su sobrecarga."}),"\n",(0,n.jsx)(a.h3,{id:"4-falta-de-escalabilidad-para-nuevos-tipos-de-datos",children:"4. Falta de Escalabilidad para Nuevos Tipos de Datos"}),"\n",(0,n.jsx)(a.p,{children:"Aunque es f\xe1cil agregar nuevos algoritmos, no es sencillo agregar nuevos tipos de objetos a la estructura sin modificar las clases visitantes existentes."}),"\n",(0,n.jsx)(a.h3,{id:"5-menor-flexibilidad-en-lenguajes-din\xe1micos",children:"5. Menor Flexibilidad en Lenguajes Din\xe1micos"}),"\n",(0,n.jsx)(a.p,{children:"En lenguajes din\xe1micos, donde se pueden agregar m\xe9todos o comportamientos en tiempo de ejecuci\xf3n, el patr\xf3n puede ser redundante y menos efectivo."})]})}function p(e={}){const{wrapper:a}={...(0,o.R)(),...e.components};return a?(0,n.jsx)(a,{...e,children:(0,n.jsx)(c,{...e})}):c(e)}},8453:(e,a,s)=>{s.d(a,{R:()=>r,x:()=>t});var i=s(6540);const n={},o=i.createContext(n);function r(e){const a=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(a):{...a,...e}}),[a,e])}function t(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:r(e.components),i.createElement(o.Provider,{value:a},e.children)}}}]);