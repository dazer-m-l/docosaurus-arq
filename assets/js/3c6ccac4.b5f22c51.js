"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[4913],{9028:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>l,contentTitle:()=>t,default:()=>u,frontMatter:()=>i,metadata:()=>a,toc:()=>c});const a=JSON.parse('{"id":"Observer/Observer-Ventajas-y-Desventajas","title":"Ventajas y Desventajas del Patr\xf3n Observer","description":"Ventajas:","source":"@site/docs/01-Observer/03-Observer-Ventajas-y-Desventajas.md","sourceDirName":"01-Observer","slug":"/Observer/Observer-Ventajas-y-Desventajas","permalink":"/docosaurus-arq/docs/Observer/Observer-Ventajas-y-Desventajas","draft":false,"unlisted":false,"editUrl":"https://github.com/dazer-m-l/docosaurus-arq/tree/main/docs/docs/01-Observer/03-Observer-Ventajas-y-Desventajas.md","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Caracter\xedsticas del Patr\xf3n Observer","permalink":"/docosaurus-arq/docs/Observer/Observer-Caracteristicas"},"next":{"title":"Ejemplo del Patr\xf3n Observer","permalink":"/docosaurus-arq/docs/Observer/Observer-Ejemplo"}}');var r=n(4848),o=n(8453);const i={},t="Ventajas y Desventajas del Patr\xf3n Observer",l={},c=[{value:"<strong>Ventajas</strong>:",id:"ventajas",level:2},{value:"<strong>Desventajas</strong>:",id:"desventajas",level:2}];function d(e){const s={h1:"h1",h2:"h2",header:"header",hr:"hr",li:"li",ol:"ol",p:"p",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(s.header,{children:(0,r.jsx)(s.h1,{id:"ventajas-y-desventajas-del-patr\xf3n-observer",children:"Ventajas y Desventajas del Patr\xf3n Observer"})}),"\n",(0,r.jsxs)(s.h2,{id:"ventajas",children:[(0,r.jsx)(s.strong,{children:"Ventajas"}),":"]}),"\n",(0,r.jsxs)(s.ol,{children:["\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.strong,{children:"Desacoplamiento"}),":"]}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsx)(s.li,{children:"El patr\xf3n facilita un alto grado de desacoplamiento entre el sujeto y los observadores. El sujeto no necesita conocer las clases espec\xedficas de los observadores, solo necesita notificarlos cuando ocurra un cambio de estado. Esto permite modificar, agregar o eliminar observadores sin alterar el c\xf3digo del sujeto."}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.strong,{children:"Escalabilidad"}),":"]}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsx)(s.li,{children:"El patr\xf3n es escalable, ya que permite agregar nuevos observadores sin necesidad de modificar el c\xf3digo del sujeto ni los dem\xe1s observadores. Si se requieren m\xe1s observadores, simplemente se agregan a la lista de notificaci\xf3n."}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.strong,{children:"Facilidad para implementar actualizaciones autom\xe1ticas"}),":"]}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsx)(s.li,{children:"Los observadores se actualizan de forma autom\xe1tica, lo que facilita el dise\xf1o de aplicaciones en tiempo real, como en los sistemas de monitoreo de datos, aplicaciones de mensajer\xeda, o incluso en la interfaz gr\xe1fica de usuario (GUI), donde los componentes necesitan ser actualizados cuando los datos cambian."}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.strong,{children:"Reutilizaci\xf3n de c\xf3digo"}),":"]}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsx)(s.li,{children:"Los observadores pueden ser reutilizados en diferentes contextos sin que los detalles del sujeto deban cambiar. Los observadores son simplemente clases que reaccionan a los cambios del sujeto y pueden ser aplicadas en otros contextos sin modificaciones."}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.strong,{children:"Mejora la claridad y organizaci\xf3n del c\xf3digo"}),":"]}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsx)(s.li,{children:"Al utilizar el patr\xf3n Observer, el c\xf3digo se vuelve m\xe1s organizado, ya que los cambios de estado se gestionan centralizadamente en el sujeto, y los observadores solo se enfocan en reaccionar ante esos cambios. Esto mejora la claridad del c\xf3digo y facilita su mantenimiento."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(s.h2,{id:"desventajas",children:[(0,r.jsx)(s.strong,{children:"Desventajas"}),":"]}),"\n",(0,r.jsxs)(s.ol,{children:["\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.strong,{children:"Sobrecarga en la notificaci\xf3n"}),":"]}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsx)(s.li,{children:"Si el n\xfamero de observadores es muy grande, cada vez que el sujeto cambie su estado, se puede generar una sobrecarga de notificaciones. En algunos casos, si los observadores son muy complejos o si se notifican demasiadas veces, el rendimiento del sistema podr\xeda verse afectado. Es importante tener control sobre la cantidad de observadores y la frecuencia de las notificaciones."}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.strong,{children:"Dependencia de la estructura del sujeto"}),":"]}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsx)(s.li,{children:"Aunque el patr\xf3n permite el desacoplamiento, el sujeto todav\xeda necesita mantener una lista de observadores, lo que implica que el sujeto debe gestionar correctamente las notificaciones y las suscripciones. Si no se gestionan bien estos elementos, puede surgir confusi\xf3n o problemas de sincronizaci\xf3n."}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.strong,{children:"Pueden generarse actualizaciones indeseadas"}),":"]}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsx)(s.li,{children:"En algunos escenarios, el patr\xf3n Observer puede generar notificaciones que no son necesarias o que podr\xedan producir efectos secundarios no deseados. Si los observadores no gestionan correctamente las actualizaciones, pueden ocurrir problemas como la actualizaci\xf3n repetida de datos o reacciones innecesarias a ciertos cambios."}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.strong,{children:"Dif\xedcil de rastrear el comportamiento"}),":"]}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsx)(s.li,{children:"En sistemas grandes con muchos observadores, puede ser dif\xedcil rastrear el flujo de notificaciones y entender c\xf3mo cada observador est\xe1 reaccionando ante el cambio de estado. Esto puede hacer que el comportamiento del sistema sea menos predecible, especialmente en aplicaciones muy din\xe1micas."}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.strong,{children:"P\xe9rdida de control sobre el orden de las actualizaciones"}),":"]}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsx)(s.li,{children:"Si el orden en que los observadores reciben las notificaciones es importante, puede ser dif\xedcil garantizar que se actualicen en el orden correcto. Los observadores pueden tener diferentes prioridades o requerir un manejo especial de las actualizaciones."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(s.hr,{})]})}function u(e={}){const{wrapper:s}={...(0,o.R)(),...e.components};return s?(0,r.jsx)(s,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},8453:(e,s,n)=>{n.d(s,{R:()=>i,x:()=>t});var a=n(6540);const r={},o=a.createContext(r);function i(e){const s=a.useContext(o);return a.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function t(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),a.createElement(o.Provider,{value:s},e.children)}}}]);